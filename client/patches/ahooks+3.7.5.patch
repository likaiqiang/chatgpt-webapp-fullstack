diff --git a/node_modules/ahooks/es/useLongPress/index.js b/node_modules/ahooks/es/useLongPress/index.js
index 2070f2e..fdbc565 100644
--- a/node_modules/ahooks/es/useLongPress/index.js
+++ b/node_modules/ahooks/es/useLongPress/index.js
@@ -22,6 +22,7 @@ function useLongPress(onLongPress, target, {
     y: 0
   });
   const hasMoveThreshold = !!((moveThreshold === null || moveThreshold === void 0 ? void 0 : moveThreshold.x) && moveThreshold.x > 0 || (moveThreshold === null || moveThreshold === void 0 ? void 0 : moveThreshold.y) && moveThreshold.y > 0);
+  const isOverThresholdRef = useRef(false)
   useEffectWithTarget(() => {
     const targetElement = getTargetElement(target);
     if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {
@@ -56,6 +57,8 @@ function useLongPress(onLongPress, target, {
       };
     }
     const onStart = event => {
+      if( typeof event.button !== 'undefined' && event.button !== 0) return
+      isOverThresholdRef.current = false
       if (hasMoveThreshold) {
         const {
           clientX,
@@ -70,12 +73,17 @@ function useLongPress(onLongPress, target, {
       }, delay);
     };
     const onMove = event => {
-      if (timerRef.current && overThreshold(event)) {
+      if( typeof event.button !== 'undefined' && event.button !== 0) return
+      const isOverThreshold = overThreshold(event)
+      isOverThresholdRef.current = isOverThreshold
+
+      if (timerRef.current && isOverThreshold) {
         clearInterval(timerRef.current);
         timerRef.current = undefined;
       }
     };
     const onEnd = (event, shouldTriggerClick = false) => {
+      if( typeof event.button !== 'undefined' && event.button !== 0) return
       var _a;
       if (timerRef.current) {
         clearTimeout(timerRef.current);
@@ -83,7 +91,7 @@ function useLongPress(onLongPress, target, {
       if (isTriggeredRef.current) {
         (_a = onLongPressEndRef.current) === null || _a === void 0 ? void 0 : _a.call(onLongPressEndRef, event);
       }
-      if (shouldTriggerClick && !isTriggeredRef.current && onClickRef.current) {
+      if (shouldTriggerClick && !isTriggeredRef.current && onClickRef.current && !isOverThresholdRef.current) {
         onClickRef.current(event);
       }
       isTriggeredRef.current = false;
diff --git a/node_modules/ahooks/lib/useLongPress/index.js b/node_modules/ahooks/lib/useLongPress/index.js
index 4a73c61..d94fd43 100644
--- a/node_modules/ahooks/lib/useLongPress/index.js
+++ b/node_modules/ahooks/lib/useLongPress/index.js
@@ -8,6 +8,7 @@ exports["default"] = void 0;
 var _react = require("react");
 var _useLatest = _interopRequireDefault(require("../useLatest"));
 var _domTarget = require("../utils/domTarget");
+const {useRef} = require("react");
 var _isBrowser = _interopRequireDefault(require("../utils/isBrowser"));
 var _useEffectWithTarget = _interopRequireDefault(require("../utils/useEffectWithTarget"));
 var touchSupported = _isBrowser["default"] && (
@@ -30,6 +31,8 @@ function useLongPress(onLongPress, target) {
     y: 0
   });
   var hasMoveThreshold = !!((moveThreshold === null || moveThreshold === void 0 ? void 0 : moveThreshold.x) && moveThreshold.x > 0 || (moveThreshold === null || moveThreshold === void 0 ? void 0 : moveThreshold.y) && moveThreshold.y > 0);
+  const isOverThresholdRef = _react.useRef(false);
+
   (0, _useEffectWithTarget["default"])(function () {
     var targetElement = (0, _domTarget.getTargetElement)(target);
     if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {
@@ -63,6 +66,8 @@ function useLongPress(onLongPress, target) {
       };
     }
     var onStart = function onStart(event) {
+      if( typeof event.button !== 'undefined' && event.button !== 0) return
+      isOverThresholdRef.current = false
       if (hasMoveThreshold) {
         var _getClientPosition2 = getClientPosition(event),
           clientX = _getClientPosition2.clientX,
@@ -76,12 +81,16 @@ function useLongPress(onLongPress, target) {
       }, delay);
     };
     var onMove = function onMove(event) {
-      if (timerRef.current && overThreshold(event)) {
+      if( typeof event.button !== 'undefined' && event.button !== 0) return
+      const isOverThreshold = overThreshold(event)
+      isOverThresholdRef.current = isOverThreshold
+      if (timerRef.current && isOverThreshold)) {
         clearInterval(timerRef.current);
         timerRef.current = undefined;
       }
     };
-    var onEnd = function onEnd(event) {
+    var onEnd = function onEnd(event)
+      if( typeof event.button !== 'undefined' && event.button !== 0) return
       var shouldTriggerClick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
       var _a;
       if (timerRef.current) {
@@ -90,7 +99,7 @@ function useLongPress(onLongPress, target) {
       if (isTriggeredRef.current) {
         (_a = onLongPressEndRef.current) === null || _a === void 0 ? void 0 : _a.call(onLongPressEndRef, event);
       }
-      if (shouldTriggerClick && !isTriggeredRef.current && onClickRef.current) {
+      if (shouldTriggerClick && !isTriggeredRef.current && onClickRef.current && !isOverThresholdRef.current) {
         onClickRef.current(event);
       }
       isTriggeredRef.current = false;
